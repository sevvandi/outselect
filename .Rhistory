dat <- read.csv("C:/Users/Sevvandi/Documents/Research/Preprocessing_Anomalies_And_Instance_Spaces/DataFolder_Input/Datasets_To_Test_Functions/abalone_C1_P02_V07.arff")
dat <- read.arff("C:/Users/Sevvandi/Documents/Research/Preprocessing_Anomalies_And_Instance_Spaces/DataFolder_Input/Datasets_To_Test_Functions/abalone_C1_P02_V07.arff")
ftrs <- ComputeMetaFeaturesMM(dat)
usethis::use_package("infotheo")
install.packages("infothoe")
install.packages("infothoe")
install.packages("infotheo")
usethis::use_package("infotheo")
dat <- read.arff("C:/Users/Sevvandi/Documents/Research/Preprocessing_Anomalies_And_Instance_Spaces/DataFolder_Input/Datasets_To_Test_Functions/abalone_C1_P02_V07.arff")
ftrs <- ComputeMetaFeaturesMM(dat)
??Discretize
devtools::load_all()
ftrs <- ComputeMetaFeaturesMM(dat)
devtools::load_all()
ftrs <- ComputeMetaFeaturesMM(dat)
?mutinformation
devtools::load_all()
ftrs <- ComputeMetaFeaturesMM(dat)
install.packages("moments")
usethis::use_package("moments")
devtools::load_all()
ftrs <- ComputeMetaFeaturesMM(dat)
?FNN
?fnn
??FNN\
??FNN
install.packages("FNN")
?kde
??kde
usethis::use_package("ks")
install.packages("ks")
usethis::use_package("ks")
devtools::load_all()
ftrs <- ComputeMetaFeaturesMM(dat)
devtools::load_all()
usethis::use_package("igraph")
devtools::load_all()
ftrs <- ComputeMetaFeaturesMM(dat)
devtools::load_all()
ftrs <- ComputeMetaFeaturesMM(dat)
system.time(ftrs <- ComputeMetaFeaturesMM(dat))
devtools::load_all()
fit <- TrainModels(1,1,1)
fit
devtools::load_all()
fit <- TrainModels(1,1,1)
fit <- TrainModels(1,1,1)
devtools::load_all()
fit <- TrainModels(1,1,1)
preds <- PredictPerformance(ftrs, fit)
?randomForest::predict
?randomForest
predit.randomForst
if( dim(ftrs)[2] > length(models$cols) ){
x <- ftrs[,models$cols]
}
models <- fit
if( dim(ftrs)[2] > length(models$cols) ){
x <- ftrs[,models$cols]
}
x
pred$cof <- predict(models$cof,newdata=x, type="prob")
pred$cof <- predict(models$cof,newdata=x)
pred$cof <- predict(models$cof,newdata=x)
models$cof
pred$cof <- predict(models$cof,newdata=as.matrix(x))
devtools::load_all()
library(outselect)
178*2
?TrainModels
devtools::load_all(0)
devtools::load_all()
matrix(c(1,2,3,4), ncol=2)
matrix(c(1,2,3,4), nrow=2)
devtools::load_all()
devtools::load_all()
data(Arrhythmia_withoutdupl_05_v05)
dat <- Arrhythmia_withoutdupl_05_v05
feat <- ComputeMetaFeaturesMM(dat)
fit <- TrainModels(1,1,1)
out <- PredictPerformance(feat, fit)
out
svmout <- DrawInstSpace(d=1)
head(xx)
devtools::load_all()
svmout <- DrawInstSpace(d=1)
head(xx)
ggplot2::ggplot(data=xx, aes(x,y))+ geom_point(aes(color=algorithms))
is.data.frame(xx)
head(xx)
head(data)
ggplot2::ggplot(data=data, aes(x,y))+ geom_point())
out <- list()
out$preds10 <- preds.all.1.0
out$predprobs <- preds.all
out$algorithms <- algorithms
out$filenames <- filenames
out$d <- d
out$coordinates <- xx
devtools::load_all()
svmout <- DrawInstSpace(d=1)
head(svmout$coordinates)
ggplot2::ggplot(data=svmout$coordinates, aes(x,y))+ geom_point(aes(color=svmout$algorithms))
colnames(svmout$coordinates)
ggplot2::ggplot(data=svmout$coordinates,aes(x=x,y=y))+ geom_point(aes(color=svmout$algorithms))
?ggplot
ggplot2::ggplot(data=svmout$coordinates,aes("x","y")+ geom_point(aes(color=svmout$algorithms))
)
ggplot2::ggplot(data=svmout$coordinates,aes("x","y"))+ geom_point(aes(color=svmout$algorithms))
install.packages("ggplot2")
install.packages("ggplot2")
devtools::load_all()
ggplot2::ggplot(data=svmout$coordinates,aes("x","y"))+ geom_point(aes(color=svmout$algorithms))
ggplot2::ggplot(data=svmout$coordinates,aes(x,y))+ geom_point(aes(color=svmout$algorithms))
is.data.frame(svmout$coordinates)
devtools::load_all()
svmout <- DrawInstSpace(d=1)
ggplot2::ggplot(data=svmout$coordinates,ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=svmout$algorithms))
data(Arrhythmia_withoutdupl_05_v05)
dat <- Arrhythmia_withoutdupl_05_v05
feat <- ComputeMetaFeaturesMM(dat)
PlotNewInstance(svmout, feat)
col_names
x
i
j
devtools::load_all()
PlotNewInstance(svmout, feat)
dim(feat)
PlotNewInstance(svmout, feat)
proj_mat <- matrix( c(-0.0460, 0.1202, -0.0862, -0.0938, 0.1854, 0.1737, 0.3543, -0.2847, 0.0378, -0.2078,-0.2025, -0.0822, 0.1845, -0.1325), nrow=2 )
proj_mat
feat[ ,col_names]
col_names <- c("OPO_Res_ResOut_Median_1", "OPO_Den_Out_95P_1", "Mean_Entropy_Attr", "OPO_Res_Out_Mean_1", "OPO_GDeg_PO_Mean_1", "IQR_TO_SD_95", "OPO_GDeg_Out_Mean_1")
feat[, col_names]
dim(feat[, col_names])
proj_mat%*%t(feat[ ,col_names])
proj_mat
proj_mat <- matrix( c(-0.0460, 0.1202, -0.0862, -0.0938, 0.1854, 0.1737, 0.3543, -0.2847, 0.0378, -0.2078,-0.2025, -0.0822, 0.1845, -0.1325), nrow=2 )
col_names <- c("OPO_Res_ResOut_Median_1", "OPO_Den_Out_95P_1", "Mean_Entropy_Attr", "OPO_Res_Out_Mean_1", "OPO_GDeg_PO_Mean_1", "IQR_TO_SD_95", "OPO_GDeg_Out_Mean_1")
proj_mat%*%t(feat[ ,col_names])
t(proj_mat%*%t(feat[ ,col_names]))
new_coords <- t(proj_mat%*%t(feat[ ,col_names]))
coordinates <- rbind.data.frame(coordinates, new_coords)
algorithms <- c(algorithms, "NEW INST.")
print(ggplot2::ggplot(data=coordinates, aes(x,y))+ geom_point(aes(color=algorithms)))
devtools::load_all()
PlotNewInstance(svmout, feat)
PlotNewInstance(svmout, feat)
feat
dim(feat)
PlotNewInstance(svmout, feat)
t(proj_mat%*%t(feat[ ,col_names]))
new_coords <- t(proj_mat%*%t(feat[ ,col_names]))
coordinates <- rbind.data.frame(coordinates, new_coords)
colnames(new_coords) <- colnames(coordinates)
coordinates <- rbind.data.frame(coordinates, new_coords)
algorithms <- c(algorithms, "NEW INST.")
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
devtools::load_all()
devtools::load_all()
PlotNewInstance(svmout, feat)
install.packages("viridis")
usethis::use_package("viridis")
devtools::load_all()
PlotNewInstance(svmout, feat)
PlotNewInstance(svmout, feat)
algorithms <- c(algorithms, "NEW INST.")
unique(algorithms)
length(unique(algorithms))
viridis::viridis(length(unique(algorithms)))
colscheme <- viridis::viridis(length(unique(algorithms)))
ggplot2::ggplot(data=coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=colscheme[algorithms]), size=rel_size) + ggplot2::theme_bw()
colscheme[algorithms]
PlotNewInstance(svmout, feat)
algorithms <- c(algorithms, "NEW INST.")
colscheme <- viridis::viridis(length(unique(algorithms)))
colscheme[algorithms]
colscheme
algorithms
colscheme[as.factor(algorithms)]
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
devtools::document()
?CrossValidateSVM
devtools::document()
?CrossValidateSVM
devtools::load_all()
devtools::load_all()
devtools::document()
?PlotNewInstance
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::document()
devtools::document()
library(outselect)
devtools::use_readme_rmd()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
out <- DrawInstSpace()
devtools::load_all()
devtools::document()
library(outselect)
devtools::load_all(0)
devtools::load_all()
devtools::document()
warnings()
devtools::document()
warnings()
devtools::document()
devtools::document()
library(outselect)
devtools::load_all()
devtools::document()
library(outselect)
devtools::use_travis()
usethis::use_travis()
usethis::use_travis()
library(outselect)
devtools::load_all()
library(outselect)
devtools::load_all()
devtools::load_all()
devtools::document()
library(outselect)
?ComputeMetaFeaturesAll
data(Arrhythmia_withoutdupl_05_v05)
dat <- Arrhythmia_withoutdupl_05_v05
feat <- ComputeMetaFeaturesAll(dat)
feat
library("outselect")
data(Arrhythmia_withoutdupl_05_v05)
dat <- Arrhythmia_withoutdupl_05_v05
feat <- ComputeMetaFeaturesAll(dat)
feat
devtools::load_all()
library(outselect)
usethis::use_package("quantmod")
devtools::load_all
devtools::load_all()
devtools::document()
library(outselect)
usethis::use_travis()
usethis::use_travis()
usethis::use_package("dbscan")
usethis::use_package("FNN")
devtools::load_all()
devtools::document()
library(outselect)
devtools::load_all()
devtools::load_all()
devtools::document()
library(outselect)
library(outselect)
folder <- "C:/MonashCluster/Outlier_Instance_Space/WriteFolder/Collated_Data_AP/"
files_list <- list.files(folder, "csv")
col_names_set <- c("filename")
files_list
for(i in 1:length(files_list)){
dat <- read.csv(paste(folder, files_list[i], sep=""))
col_names_set <- c(col_names_set, substring(files_list[i], 8, (nchar(files_list[i])-4)) )
if(i==1){
dat_all <- dat
}else{
dat_all <- merge(dat_all, dat, by="filename")
}
colnames(dat_all) <- col_names_set
}
warnings(0)
warnings()
files_list <- list.files(folder, "csv")
col_names_set <- c("filename")
i <-1
dat <- read.csv(paste(folder, files_list[i], sep=""))
col_names_set <- c(col_names_set, substring(files_list[i], 8, (nchar(files_list[i])-4)) )
col_names_set
dat <- read.csv(paste(folder, files_list[i], sep=""))
head(dat)
files_list[i]
col_names_set <- c(col_names_set, substring(files_list[i], 7, (nchar(files_list[i])-4)) )
col_names_set
files_list <- list.files(folder, "csv")
col_names_set <- c("filename")
for(i in 1:length(files_list)){
dat <- read.csv(paste(folder, files_list[i], sep=""))
col_names_set <- c(col_names_set, substring(files_list[i], 7, (nchar(files_list[i])-4)) )
if(i==1){
dat_all <- dat
}else{
dat_all <- merge(dat_all, dat, by="filename")
}
colnames(dat_all) <- col_names_set
}
colnames(dat_all) <- col_names_set
perf_all <- dat_all
library(outselect)
data("features_all")
perf_and_feat <- merge(features_all, perf_all)
colnames(perf_and_feat)
data("abs_perfs_all")
colnames(abs_perfs_all)
which(col_names_set %in% "Simplified_")
grep("Simplified_",col_names_set)
?grep
temp <- col_names_set
sub("Simplified_","SIM", temp)
temp <- sub("Simplified_","SIM", temp)
temp <- col_names_set
temp <- sub("Simplified_","SIM", temp)
temp
col_names_set <- temp
colnames(dat_all) <- col_names_set
perf_all <- dat_all
colnames(perf_all)
library(outselect)
data("features_all")
perf_and_feat <- merge(features_all, perf_all)
rows <- which(apply(perf_and_feat[, -1], 1, function(x)sum(is.na(x)))  > 0)
rows
perf_and_feat <- perf_and_feat[-rows, ]
colnames(perf_and_feat)
features_all <- perf_and_feat[ ,1:347]
allcols <- dim(perf_and_feat)[2]
# perf_vals_roc_all <- perf_and_feat[ ,c(348:allcols)]
perf_vals_pr_all <- perf_and_feat[ ,c(348:allcols)]
cols <- which(apply(perf_vals_pr_all, 2, function(x)sum(is.na(x)))  > 0)
cols
rows <- which(apply(perf_and_feat[,-1], 1, function(x)sum(is.na(x)))  > 0)
rows
features_all_ap <- features_all
data("features_all")
identical(features_all, features_all_ap)
dim(features_all)
dim(features_all_ap)
library(outselect)
data("features_all")
perf_and_feat <- merge(features_all, perf_all)
rows <- which(apply(perf_and_feat[, -1], 1, function(x)sum(is.na(x)))  > 0)
perf_and_feat <- perf_and_feat[-rows, ]
features_all_pr <- perf_and_feat[ ,1:347]
allcols <- dim(perf_and_feat)[2]
# perf_vals_roc_all <- perf_and_feat[ ,c(348:allcols)]
perf_vals_pr_all <- perf_and_feat[ ,c(348:allcols)]
cols <- which(apply(perf_vals_pr_all, 2, function(x)sum(is.na(x)))  > 0)
rows <- which(apply(perf_and_feat[,-1], 1, function(x)sum(is.na(x)))  > 0)
cols
rows
identical(features_all, features_all_pr)
usethis::use_data(features_all_pr, overwrite=TRUE)
usethis::use_data(perf_vals_pr_all, overwrite=TRUE)
colnames(perf_vals_pr_all)
# cor_obj <- cor(perf_vals_roc_all[ ,2*1:28])
cor_obj <- cor(perf_vals_pr_all[ ,2*1:28])
write.csv(cor_obj, paste("//ad.monash.edu/home/User098/skandan/Documents/Research/Preprocessing_Anomalies_And_Instance_Spaces/DataFolder_Output/Revisions_DMKD/Select_Methods/Correlation_between_methods_pr.csv"), row.names=FALSE)
library(cluster)
dissimilarity <- 1 - cor_obj
distance <- as.dist(dissimilarity)
kk <- 8
pam_obj <- pam(distance, k=kk)
plot(pam(distance, k=kk))
which(pam_obj$clustering ==1)
which(pam_obj$clustering ==2)
which(pam_obj$clustering ==3)
which(pam_obj$clustering ==4)
which(pam_obj$clustering ==5)
which(pam_obj$clustering ==6)
which(pam_obj$clustering ==7)
which(pam_obj$clustering ==8)
devtools::load_all()
clspr <- ClusterMethods(8, rocpr=2)
clspr$isolation
clspr$clustering
cls <- ClusterMethods(8, rocpr=1)
which(cls$clustering==8)
which(clspr$clustering==8)
which(cls$clustering==7)
which(clspr$clustering==7)
cor(perf_vals_pr_all, perf_vals_roc_all)
jj <- 6
which(clspr$clustering==jj)
which(cls$clustering==jj)
jj <- 5
which(clspr$clustering==jj)
which(cls$clustering==jj)
jj <- 4
which(clspr$clustering==jj)
which(cls$clustering==jj)
jj <- 3
which(clspr$clustering==jj)
which(cls$clustering==jj)
jj <- 2
which(clspr$clustering==jj)
which(cls$clustering==jj)
jj <- 1
which(clspr$clustering==jj)
which(cls$clustering==jj)
jj <- 2
which(clspr$clustering==jj)
which(cls$clustering==jj)
jj <- 3
which(clspr$clustering==jj)
which(cls$clustering==jj)
which(clspr$clustering==jj)
jj <- 4
which(clspr$clustering==jj)
which(cls$clustering==jj)
jj <- 5
which(clspr$clustering==jj)
which(cls$clustering==jj)
jj <- 6
which(clspr$clustering==jj)
which(cls$clustering==jj)
jj <- 7
which(clspr$clustering==jj)
which(cls$clustering==jj)
jj <- 8
which(clspr$clustering==jj)
which(cls$clustering==jj)
methodschosen <- c("Ensemble_Median_IQR","LOF_Min_Max", "KNN_Median_IQR","FAST_ABOD_Min_Max", "iForest_Median_IQR", "KDEOS_Median_IQR", "KDEOS_Min_Max", "LDF_Min_Max")
write_folder <- "//ad.monash.edu/home/User098/skandan/Documents/Research/Preprocessing_Anomalies_And_Instance_Spaces/DataFolder_Output/Revisions_DMKD/Select_Methods/"
perf_vals_pr_subset <- perf_vals_pr_all[, methodschosen]
# perf_vals_roc_subset <- perf_vals_roc_all[, methodschosen]
usethis::use_data(perf_vals_pr_subset)
colnames(perf_vals_pr_subset)
?data
search()
e <- new.env()
data("features_all", envir=e)
data("features_all_pr",envir=e)
fnames_roc <- features_all[,1]
fnames_pr <- features_all_pr[,1]
fnames_roc
roc_list <- which(fnames_roc %in% fnames_pr)
roc_list
pr_list <- which(fnames_pr %in% fnames_roc)
i <- 1
cor(perf_vals_roc_all[roc_list,i], perf_vals_pr_all[pr_list,i])
perf_vals_roc_all[roc_list,i]
perf_vals_pr_all[pr_list,i]
length(roc_list)
length(pr_list)
cor(perf_vals_roc_all[roc_list,i], perf_vals_pr_all[pr_list,i])
cor_vals <- rep(0,56)
for(i in 1:56){
cor_vals[i] <- cor(perf_vals_roc_all[roc_list,i], perf_vals_pr_all[pr_list,i])
}
cor_vals
?cor
plot(perf_vals_roc_all[roc_list,i], perf_vals_pr_all[pr_list,i])
sum(is.na(perf_vals_roc_all[roc_list,i]))
sum(is.na(perf_vals_pr_all[pr_list,i]))
is.na(perf_vals_roc_all[roc_list,i])
which(is.na(perf_vals_roc_all[roc_list,i]))
?cor
cor_vals[i] <- cor(perf_vals_roc_all[roc_list,i], perf_vals_pr_all[pr_list,i], use="complete.obs")
cor(perf_vals_roc_all[roc_list,i], perf_vals_pr_all[pr_list,i], use="complete.obs")
colnames(perf_vals_roc_all)
colnames(perf_vals_pr_all)
fnames_roc[roc_list]
identical(fnames_roc[roc_list], fnames_pr[pr_list])
devtools::load_all()
cor <- CorrPrRoc()
cor
devtools::load_all()
cor <- CorrPrRoc()
cor
?identical
?cor
devtools::load_all()
devtools::document()
devtools::document()
