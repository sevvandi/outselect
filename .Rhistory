install.packages("ggplot2")
install.packages("ggplot2")
devtools::load_all()
ggplot2::ggplot(data=svmout$coordinates,aes("x","y"))+ geom_point(aes(color=svmout$algorithms))
ggplot2::ggplot(data=svmout$coordinates,aes(x,y))+ geom_point(aes(color=svmout$algorithms))
is.data.frame(svmout$coordinates)
devtools::load_all()
svmout <- DrawInstSpace(d=1)
ggplot2::ggplot(data=svmout$coordinates,ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=svmout$algorithms))
data(Arrhythmia_withoutdupl_05_v05)
dat <- Arrhythmia_withoutdupl_05_v05
feat <- ComputeMetaFeaturesMM(dat)
PlotNewInstance(svmout, feat)
col_names
x
i
j
devtools::load_all()
PlotNewInstance(svmout, feat)
dim(feat)
PlotNewInstance(svmout, feat)
proj_mat <- matrix( c(-0.0460, 0.1202, -0.0862, -0.0938, 0.1854, 0.1737, 0.3543, -0.2847, 0.0378, -0.2078,-0.2025, -0.0822, 0.1845, -0.1325), nrow=2 )
proj_mat
feat[ ,col_names]
col_names <- c("OPO_Res_ResOut_Median_1", "OPO_Den_Out_95P_1", "Mean_Entropy_Attr", "OPO_Res_Out_Mean_1", "OPO_GDeg_PO_Mean_1", "IQR_TO_SD_95", "OPO_GDeg_Out_Mean_1")
feat[, col_names]
dim(feat[, col_names])
proj_mat%*%t(feat[ ,col_names])
proj_mat
proj_mat <- matrix( c(-0.0460, 0.1202, -0.0862, -0.0938, 0.1854, 0.1737, 0.3543, -0.2847, 0.0378, -0.2078,-0.2025, -0.0822, 0.1845, -0.1325), nrow=2 )
col_names <- c("OPO_Res_ResOut_Median_1", "OPO_Den_Out_95P_1", "Mean_Entropy_Attr", "OPO_Res_Out_Mean_1", "OPO_GDeg_PO_Mean_1", "IQR_TO_SD_95", "OPO_GDeg_Out_Mean_1")
proj_mat%*%t(feat[ ,col_names])
t(proj_mat%*%t(feat[ ,col_names]))
new_coords <- t(proj_mat%*%t(feat[ ,col_names]))
coordinates <- rbind.data.frame(coordinates, new_coords)
algorithms <- c(algorithms, "NEW INST.")
print(ggplot2::ggplot(data=coordinates, aes(x,y))+ geom_point(aes(color=algorithms)))
devtools::load_all()
PlotNewInstance(svmout, feat)
PlotNewInstance(svmout, feat)
feat
dim(feat)
PlotNewInstance(svmout, feat)
t(proj_mat%*%t(feat[ ,col_names]))
new_coords <- t(proj_mat%*%t(feat[ ,col_names]))
coordinates <- rbind.data.frame(coordinates, new_coords)
colnames(new_coords) <- colnames(coordinates)
coordinates <- rbind.data.frame(coordinates, new_coords)
algorithms <- c(algorithms, "NEW INST.")
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
devtools::load_all()
devtools::load_all()
PlotNewInstance(svmout, feat)
install.packages("viridis")
usethis::use_package("viridis")
devtools::load_all()
PlotNewInstance(svmout, feat)
PlotNewInstance(svmout, feat)
algorithms <- c(algorithms, "NEW INST.")
unique(algorithms)
length(unique(algorithms))
viridis::viridis(length(unique(algorithms)))
colscheme <- viridis::viridis(length(unique(algorithms)))
ggplot2::ggplot(data=coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=colscheme[algorithms]), size=rel_size) + ggplot2::theme_bw()
colscheme[algorithms]
PlotNewInstance(svmout, feat)
algorithms <- c(algorithms, "NEW INST.")
colscheme <- viridis::viridis(length(unique(algorithms)))
colscheme[algorithms]
colscheme
algorithms
colscheme[as.factor(algorithms)]
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
PlotNewInstance(svmout, feat)
devtools::load_all()
devtools::document()
?CrossValidateSVM
devtools::document()
?CrossValidateSVM
devtools::load_all()
devtools::load_all()
devtools::document()
?PlotNewInstance
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::document()
devtools::document()
library(outselect)
devtools::use_readme_rmd()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
out <- DrawInstSpace()
devtools::load_all()
devtools::document()
library(outselect)
devtools::load_all(0)
devtools::load_all()
devtools::document()
warnings()
devtools::document()
warnings()
devtools::document()
devtools::document()
library(outselect)
devtools::load_all()
devtools::document()
library(outselect)
devtools::use_travis()
usethis::use_travis()
usethis::use_travis()
library(outselect)
devtools::load_all()
library(outselect)
devtools::load_all()
devtools::load_all()
devtools::document()
library(outselect)
?ComputeMetaFeaturesAll
data(Arrhythmia_withoutdupl_05_v05)
dat <- Arrhythmia_withoutdupl_05_v05
feat <- ComputeMetaFeaturesAll(dat)
feat
library("outselect")
data(Arrhythmia_withoutdupl_05_v05)
dat <- Arrhythmia_withoutdupl_05_v05
feat <- ComputeMetaFeaturesAll(dat)
feat
devtools::load_all()
library(outselect)
usethis::use_package("quantmod")
devtools::load_all
devtools::load_all()
devtools::document()
library(outselect)
usethis::use_travis()
usethis::use_travis()
usethis::use_package("dbscan")
usethis::use_package("FNN")
devtools::load_all()
devtools::document()
library(outselect)
devtools::load_all()
devtools::load_all()
devtools::document()
library(outselect)
library(outselect)
devtools::load_all()
devtools::document()
?InstSpace
?PlotNewInstance
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::document()
usethis::use_gpl3_license()
?usethis::use_gpl3_license
devtools::load_all()
usethis::use_gpl3_license()
usethis::use_gpl3_license(outselect)
usethis::use_gpl3_license("outselect")
?gls
?nlme::gls
?diff
A <- matrix(1:6, ncol=2)
diff(A)
A
nn <- 10
rep(1:nn, each = 2) + (0:1)*nn
rep(1:nn, each = 2)
(0:1)*nn
rep(1:nn, each = 2) + (0:1)*nn
devtools::load_all()
install.packages("tsutils")
install.packages("latex2exp")
devtools::load_all()
e <- new.env()
# Instance space using MIN_MAX
data("dat_4_svm_mm", envir=e)
colnames(dat_4_svm_mm)
folder <- "C:/Users/Sevvandi/Downloads/coordinatedataroc/"
coords <- read.csv(paste(folder, "coordinates.csv", sep=""))
head(coords)
head(dat_4_svm_mm)
alg_raw <- read.csv(paste(folder, "algorithm_raw.csv", sep=""))
head(alg_raw)
colnames(alg_raw)
colnames(alg_raw)[1] <- "filename"
alg_raw2 <- c(1,0)[alg_raw[ ,-1] > 0.8]
head(alg_raw2)
alg_raw[ ,-1] > 0.8
alg_raw2 <- alg_raw
alg_raw2[alg_raw[ ,-1] > 0.8] <- 1
alg_raw2 <- alg_raw
alg_raw2[alg_raw[ ,-1] > 0.8, -1] <- 1
alg_raw2 <- alg_raw[, -1]
alg_raw2[alg_raw[ ,-1] > 0.8, ] <- 1
alg_raw2 <- matrix(0, nrow=dim(alg_row)[1], ncol=dim(alg_row)[2])
head(alg_raw)
alg_raw2 <- matrix(0, nrow=dim(alg_raw)[1], ncol=dim(alg_raw)[2])
alg_raw2 <- matrix(0, nrow=dim(alg_raw)[1], ncol=(dim(alg_raw)[2] -1) )
alg_raw2[alg_raw[ ,-1] > 0.8, ] <- 1
alg_raw2[alg_raw[ ,-1] > 0.8] <- 1
alg_raw <- read.csv(paste(folder, "algorithm_raw.csv", sep=""))
head(alg_raw)
colnames(alg_raw)[1] <- "filename"
alg_raw2 <- matrix(0, nrow=dim(alg_raw)[1], ncol=(dim(alg_raw)[2] -1) )
alg_raw2[alg_raw[ ,-1] > 0.8] <- 1
alg_raw2[alg_raw[ ,-1] >= 0.8] <- 1
head(alg_raw2)
alg_raw2 <- cbind.data.frame(alg_raw1[,1], alg_raw2)
alg_raw2 <- cbind.data.frame(alg_raw[,1], alg_raw2)
colnames(alg_raw2) <- colnames(alg_raw)
colnames(alg_raw2)
colnames(coords)
colnames(coords) <- c("filename", "x", "y")
data_4_svm_mix <- merge(coords, alg_raw2, by="filename")
colnames(data_4_svm_mix)
head(data_4_svm_mix)
usethis::use_data(data_4_svm_mix)
colnames(data_4_svm_mix)
devtools::load_all()
out <- InstSpace(d=2, vis=TRUE)
out$preds10
devtools::load_all()
out <- InstSpace(d=2, vis=TRUE)
devtools::load_all()
out <- InstSpace(d=2, vis=TRUE)
devtools::load_all()
out <- InstSpace(d=2, vis=TRUE)
devtools::load_all()
out <- InstSpace(d=2, vis=TRUE)
devtools::load_all()
out <- InstSpace(d=2, vis=TRUE)
devtools::load_all()
out <- InstSpace(d=2, vis=TRUE)
out$algorithms
table(out$algorithms)
folder <- "C:/Users/Sevvandi/Documents/Research/Preprocessing_Anomalies_And_Instance_Spaces/Sent_To_Andres/SVM_Coords/"
write.csv(out$algorithms,  paste(folder, "ROC_Algorithms_SVM.csv", sep="" ), row.names = FALSE)
write.csv(out$preds10,  paste(folder, "ROC_Predictions_10_SVM.csv", sep="" ), row.names = FALSE)
write.csv(out$predprobs,  paste(folder, "ROC_Prediction_Probs_SVM.csv", sep="" ), row.names = FALSE)
write.csv(out$filenames,  paste(folder, "ROC_Filenames_SVM.csv", sep="" ), row.names = FALSE)
write.csv(out$coordinates,  paste(folder, "ROC_coordinates_SVM.csv", sep="" ), row.names = FALSE)
big_out <- cbind.data.frame(out$filenames, out$coordinates, out$algorithms, out$preds10)
dim(big_out)
colnames(big_out)
colnames(big_out)[1] <- 'filename'
colnames(big_out)[4] <- "algorithms"
write.csv(big_out,  paste(folder, "ROC_SVM_details.csv", sep="" ), row.names = FALSE)
folder
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$algorithms)) + ggplot2::geom_point(ggplot2::aes(x=new_coords[1],y=new_coords[2]), color="black", shape=17, size=4)  + ggplot2::theme_bw()
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$algorithms))
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$algorithms, shape=out$algorithms))
out$algorithms
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$algorithms, shape=out$algorithms))
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$algorithms,shape=out$algorithms))
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(shape=out$algorithms))
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$algorithms), shape=out$algorithms)
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$algorithms,shape=out$algorithms))
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$algorithms)) + scale_shape_manual(values=1:nlevels(out$algorithms))
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$algorithms)) + ggplot2::scale_shape_manual(values=1:nlevels(out$algorithms))
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$algorithms, shape=out$algorithms)) + ggplot2::scale_shape_manual(values=1:nlevels(out$algorithms))
1:nlevels(out$algorithms)
nlevels(out$algorithms)
levels(out$algorithms)
is.factor(out$algorithms)
out$algorithms <- as.factor(out$algorithms)
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$algorithms, shape=out$algorithms)) + ggplot2::scale_shape_manual(values=1:nlevels(out$algorithms))
devtools::load_all()
out <- InstSpace(d=2, vis=TRUE)
table(out$algorithms)
out <- InstSpace(d=2, vis=TRUE)
devtools::load_all()
devtools::load_all()
devtools::load_all()
out <- InstSpace(d=2, vis=TRUE)
table(out$algorithms)
devtools::load_all()
out <- InstSpace(d=2, vis=TRUE)
table(out$algorithms)
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,1]))
colnames(out$preds10)
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,1])) + ggplot2::ggtitle(colnames(out$preds10)[1])
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,2])) + ggplot2::ggtitle(colnames(out$preds10)[2])
ii <- 3
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 4
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 5
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 6
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 7
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 8
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 9
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
dim(out$preds10)
out$algorithms <- as.factor(out$algorithms)
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$algorithms, shape=out$algorithms)) + ggplot2::scale_shape_manual(values=1:nlevels(out$algorithms))
table(out$algorithms)
devtools::load_all()
devtools::load_all()
out <- InstSpace(d=2, vis=TRUE)
table(out$algorithms)
ii <- 1
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 2
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 3
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 4
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 5
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 6
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 7
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 8
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
devtools::load_all()
devtools::load_all()
out <- InstSpace(d=2, vis=TRUE)
ii <- 1
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 2
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 3
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 4
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 5
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 6
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 6
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 7
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 8
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
table(out$algorithms)
devtools::load_all()
out <- InstSpace(d=2, vis=TRUE)
table(out$algorithms)
ii <- 1
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 2
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 3
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 4
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 5
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 6
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 7
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
ii <- 8
ggplot2::ggplot(data=out$coordinates, ggplot2::aes(x,y))+ ggplot2::geom_point(ggplot2::aes(color=out$preds10[,ii])) + ggplot2::ggtitle(colnames(out$preds10)[ii])
head(perfs)
data("perf_vals_roc_subset", envir=e)
perfs <- perf_vals_roc_subset
head(perfs)
data("perf_vals_mm", envir=e)
perfs <- perf_vals_mm
head(perfs)
data("features_mm")
colnames(features_mm)
filenames_mm <- features_mm[,1]
usesthis::use_data(filenames_mm)
usethis::use_data(filenames_mm)
filenames_pr
devtools::load_all()
ddsp <- DifficultyDiversitySpace()
devtools::load_all()
ddsp <- DifficultyDiversitySpace()
df <- ddsp$dfind
dim(df)
colnames(df)
library("ggplot2")
ggplot(df, aes(average, std)) + geom_point(aes(color=source))
devtools::load_all()
ddsp <- DifficultyDiversitySpace()
df <- ddsp$dfind
library("ggplot2")
ggplot(df, aes(average, std)) + geom_point(aes(color=source))
ggplot(df, aes(average, std)) + geom_point(aes(color=source)) + theme(legend.position="none") + xlab("Difficulty") + ylab("Diversity")
devtools::load_all()
df2 <- ddsp$dfsrc
ggplot(df2, aes(average, std)) + geom_point(aes(color=source)) + theme(legend.position="none") + xlab("Difficulty") + ylab("Diversity")
head(df2)
head(Df)
head(Df)
head(df)
ddsp <- DifficultyDiversitySpace()
source_avg
source_std
source_avg[,1]
source_std[,1]
source_std[ ,2]
devtools::load_all()
ddsp <- DifficultyDiversitySpace()
df <- ddsp$dfall
ddsp <- DifficultyDiversitySpace()
devtools::load_all()
ddsp <- DifficultyDiversitySpace()
devtools::load_all()
ddsp <- DifficultyDiversitySpace()
devtools::load_all()
ddsp <- DifficultyDiversitySpace()
# ROC values
data("perf_vals_roc_subset", envir=e)
perfs <- perf_vals_roc_subset
data("filenames_roc", envir=e)
filenames <- filenames_roc
# ROC values
data("perf_vals_roc_subset", envir=e)
perfs <- perf_vals_roc_subset
data("filenames_roc", envir=e)
filenames <- filenames_roc
e <- new.env()
# ROC values
data("perf_vals_roc_subset", envir=e)
perfs <- perf_vals_roc_subset
data("filenames_roc", envir=e)
filenames <- filenames_roc
# difficulty is 1 - average performance
mean_vals <- 1- apply(perfs, 1, mean)
mean_vals
sd_vals <- apply(perfs, 1, sd)
file_source <- GetFileSources(filenames)
file_source
df <- cbind.data.frame(filenames, file_source, mean_vals, sd_vals)
head(df)
colnames(df) <- c("filename", "source", "difficulty", "diversity" )
source_avg <- stats::aggregate(df$average, by=list(df$source), FUN=mean)
devtools::load_all()
ddsp <- DifficultyDiversitySpace()
df <- ddsp$dfall
ggplot(df, aes(difficulty, diversity)) + geom_point(aes(color=source)) + theme(legend.position="none") + xlab("Difficulty") + ylab("Diversity")
df2 <- ddsp$dfsrc
ggplot(df2, aes(average, std)) + geom_point(aes(color=source)) + theme(legend.position="none") + xlab("Difficulty") + ylab("Diversity")
head(df2)
ggplot(df2, aes(source_difficulty, source_diversity)) + geom_point(aes(color=source)) + theme(legend.position="none") + xlab("Difficulty") + ylab("Diversity")
which(df2$source_difficulty >0.5)
df2$source[ which(df2$source_difficulty >0.5)]
df2$source
ggplot(df, aes(difficulty, diversity)) + geom_point(aes(color=source)) + theme(legend.position="none") + xlab("Difficulty") + ylab("Diversity")
ggplot(df2, aes(source_difficulty, source_diversity)) + geom_point(aes(color=source)) + theme(legend.position="none") + xlab("Difficulty") + ylab("Diversity")
data("perf_vals_roc_all")
colnames(perf_vals_roc_all)
devtools::load_all()
devtools::load_all()
out <-  SensitivityToNormMixedMod(1)
Q
devtools::load_all()
?sweep
devtools::load_all()
devtools::load_all()
data("features_all")
feat <- features_all
colnames(feat)
install.packages("IsolationForest")
install.packages("IsolationForest", repos="http://R-Forge.R-project.org")
library("IsolationForest")
citation(IsolationForest)
citation(package="IsolationForest")
